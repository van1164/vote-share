on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    environment: vote-share
    steps:
    - uses: actions/checkout@v3
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: cd
      run: cd BE/voteshare


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      run: |
          touch BE/voteshare/src/main/resources/application-oauth.properties
          touch BE/voteshare/src/main/resources/application-prod.properties
          echo "${{ secrets.APPLICATION_PROD }}" > BE/voteshare/src/main/resources/application-prod.properties
          echo "${{ secrets.APPLICATION_OAUTH }}" > BE/voteshare/src/main/resources/application-oauth.properties
          cat BE/voteshare/src/main/resources/application-prod.properties
          cd BE/voteshare
          chmod +x gradlew
          ./gradlew clean build
          ls
          pwd
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vote_share .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vote_share:latest

        
    - name: Transfer files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: .
        target: app
    
    - name: SSH into EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd app/BE/voteshare
          sudo apt-get update
          sudo apt-get install docker.io -y
          sudo apt-get install docker-compose -y
          sudo apt-get install jq -y
          VERSION=$(curl --silent https://api.github.com/repos/docker/compose/releases/latest | jq .name -r)
          DESTINATION=/usr/bin/docker-compose
          sudo curl -L https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m) -o $DESTINATION
          sudo chmod 755 $DESTINATION
          sudo systemctl start docker
          sudo docker pull van133/vote_share
          sudo docker-compose build
          #sudo sh ./init-letsencrypt.sh
          sudo docker-compose up -d
          # sudo docker run -p 8080:8080 -d van133/vote_share
