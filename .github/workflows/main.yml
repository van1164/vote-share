on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: cd
      run: cd BE/voteshare


    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      run: |
          cd BE/voteshare
          chmod +x gradlew
          ./gradlew clean build
          
    

    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vote_share .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/vote_share

    - name: Transfer files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: .
        target: app
    
    - name: SSH into EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd app
          sudo apt-get update
          sudo apt-get install docker.io -y
          sudo apt-get install docker-compose -y
          docker-compose up -d
